{"version":3,"sources":["components/navbar.js","components/recordList.js","components/SearchInput.js","components/edit.js","components/create.js","App.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Record","props","record","name","description","address","_id","onClick","deleteRecord","RecordList","useState","records","setRecords","a","fetch","method","newRecords","filter","el","useEffect","response","ok","message","statusText","window","alert","json","getRecords","length","style","marginTop","map","autoComplete","Edit","position","level","form","setForm","params","useParams","navigate","useNavigate","updateForm","value","prev","e","preventDefault","editedPerson","body","JSON","stringify","headers","toString","fetchData","onSubmit","htmlFor","onChange","target","checked","Create","phone_number","category","website_url","image_url","law_enforcement_compliant","newPerson","catch","error","handleScriptLoad","updateQuery","autoCompleteRef","google","maps","places","Autocomplete","current","types","componentRestrictions","country","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","formatted_address","console","log","SearchInput","setQuery","useRef","url","callback","process","script","document","createElement","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","loadScript","ref","event","placeholder","App","margin","exact","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"0KASe,SAASA,IACtB,OACE,8BACE,sBAAKC,UAAU,gDAAf,UACE,cAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,IAArC,SACE,iEAEF,wBACED,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMP,UAAU,0BAGlB,qBAAKA,UAAU,2BAA2BQ,GAAG,yBAA7C,SACE,oBAAIR,UAAU,qBAAd,SACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,UAAjC,sC,kCC5BRQ,EAAS,SAACC,GAAD,OACb,+BACE,6BAAKA,EAAMC,OAAOC,OAClB,6BAAKF,EAAMC,OAAOE,cAClB,6BAAKH,EAAMC,OAAOG,UAClB,+BACE,cAAC,IAAD,CAAMd,UAAU,eAAeC,GAAE,gBAAWS,EAAMC,OAAOI,KAAzD,kBADF,KAEE,wBAAQf,UAAU,eAChBgB,QAAS,WACPN,EAAMO,aAAaP,EAAMC,OAAOI,MAFpC,2BAWS,SAASG,IACtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KADmC,4CAwBnC,WAA4Bb,GAA5B,eAAAc,EAAA,sEACQC,MAAM,yBAAD,OAA0Bf,GAAM,CACzCgB,OAAQ,WAFZ,OAKQC,EAAaL,EAAQM,QAAO,SAACC,GAAD,OAAQA,EAAGZ,MAAQP,KACrDa,EAAWI,GANb,4CAxBmC,sBA+CnC,OA3CAG,qBAAU,WAAM,4CACd,gCAAAN,EAAA,sEACyBC,MAAM,iCAD/B,WACQM,EADR,QAGgBC,GAHhB,uBAIUC,EAJV,4BAIyCF,EAASG,YAC9CC,OAAOC,MAAMH,GALjB,0CASwBF,EAASM,OATjC,OASQf,EATR,OAUEC,EAAWD,GAVb,6CADc,uBAAC,WAAD,wBAcdgB,KAGC,CAAChB,EAAQiB,SA2BV,gCACE,6CACA,wBAAOrC,UAAU,sBAAsBsC,MAAO,CAAEC,UAAW,IAA3D,UACE,gCACE,+BACE,sCACA,0CACA,uCACA,6CAGJ,gCAxBGnB,EAAQoB,KAAI,SAAC7B,GAClB,OACE,cAAC,EAAD,CACEA,OAAQA,EACRM,aAAc,kBAvCa,2CAuCPA,CAAaN,EAAOI,OACnCJ,EAAOI,gB,IC3DlB0B,E,OCCW,SAASC,IACtB,MAAwBvB,mBAAS,CAC/BP,KAAM,GACN+B,SAAU,GACVC,MAAO,GACPxB,QAAS,KAJX,mBAAOyB,EAAP,KAAaC,EAAb,KAMMC,EAASC,cACTC,EAAWC,cA6BjB,SAASC,EAAWC,GAClB,OAAON,GAAQ,SAACO,GACd,OAAO,2BAAKA,GAASD,MAvCI,4CA2C7B,WAAwBE,GAAxB,eAAAhC,EAAA,6DACEgC,EAAEC,iBACIC,EAAe,CACnB5C,KAAMiC,EAAKjC,KACX+B,SAAUE,EAAKF,SACfC,MAAOC,EAAKD,OALhB,SASQrB,MAAM,gCAAD,OAAiCwB,EAAOvC,IAAM,CACvDgB,OAAQ,OACRiC,KAAMC,KAAKC,UAAUH,GACrBI,QAAS,CACP,eAAgB,sBAbtB,OAiBEX,EAAS,KAjBX,4CA3C6B,sBAgE7B,OAtDArB,qBAAU,WAAM,4CACd,kCAAAN,EAAA,6DACQd,EAAKuC,EAAOvC,GAAGqD,WADvB,SAEyBtC,MAAM,gCAAD,OAAiCwB,EAAOvC,GAAGqD,aAFzE,WAEQhC,EAFR,QAIgBC,GAJhB,uBAKUC,EALV,gCAK6CF,EAASG,YAClDC,OAAOC,MAAMH,GANjB,2CAUuBF,EAASM,OAVhC,WAUQxB,EAVR,+BAYIsB,OAAOC,MAAP,yBAA+B1B,EAA/B,eACAyC,EAAS,KAbb,2BAiBEH,EAAQnC,GAjBV,6CADc,uBAAC,WAAD,wBAqBdmD,KAGC,CAACf,EAAOvC,GAAIyC,IA+Bb,gCACE,+CACA,uBAAMc,SAnEmB,4CAmEzB,UACE,sBAAK/D,UAAU,aAAf,UACE,uBAAOgE,QAAQ,OAAf,oBACA,uBACE9D,KAAK,OACLF,UAAU,eACVQ,GAAG,OACH4C,MAAOP,EAAKjC,KACZqD,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEvC,KAAM0C,EAAEY,OAAOd,cAGjD,sBAAKpD,UAAU,aAAf,UACE,uBAAOgE,QAAQ,WAAf,wBACA,uBACE9D,KAAK,OACLF,UAAU,eACVQ,GAAG,WACH4C,MAAOP,EAAKF,SACZsB,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAER,SAAUW,EAAEY,OAAOd,cAGrD,sBAAKpD,UAAU,aAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACVE,KAAK,QACLU,KAAK,kBACLJ,GAAG,iBACH4C,MAAM,SACNe,QAAwB,WAAftB,EAAKD,MACdqB,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEP,MAAOU,EAAEY,OAAOd,WAEhD,uBAAOY,QAAQ,iBAAiBhE,UAAU,mBAA1C,uBAEF,sBAAKA,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACVE,KAAK,QACLU,KAAK,kBACLJ,GAAG,iBACH4C,MAAM,SACNe,QAAwB,WAAftB,EAAKD,MACdqB,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEP,MAAOU,EAAEY,OAAOd,WAEhD,uBAAOY,QAAQ,iBAAiBhE,UAAU,mBAA1C,uBAEF,sBAAKA,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACVE,KAAK,QACLU,KAAK,kBACLJ,GAAG,iBACH4C,MAAM,SACNe,QAAwB,WAAftB,EAAKD,MACdqB,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEP,MAAOU,EAAEY,OAAOd,WAEhD,uBAAOY,QAAQ,iBAAiBhE,UAAU,mBAA1C,0BAGJ,uBAEA,qBAAKA,UAAU,aAAf,SACE,uBACEE,KAAK,SACLkD,MAAM,gBACNpD,UAAU,4BCpIP,SAASoE,IACtB,MAAwBjD,mBAAS,CAC/BP,KAAM,GACNE,QAAS,GACTuD,aAAc,GACdxD,YAAa,GACbyD,SAAU,GACVC,YAAa,GACbC,UAAW,GACXC,0BAA2B,OAR7B,mBAAO5B,EAAP,KAAaC,EAAb,KAUMG,EAAWC,cAGjB,SAASC,EAAWC,GAClB,OAAON,GAAQ,SAACO,GACd,OAAO,2BAAKA,GAASD,MAhBM,4CAqB/B,WAAwBE,GAAxB,eAAAhC,EAAA,6DACEgC,EAAEC,iBAGImB,EAJR,eAIyB7B,GAJzB,SAMQtB,MAAM,mCAAoC,CAC9CC,OAAQ,OACRoC,QAAS,CACP,eAAgB,oBAElBH,KAAMC,KAAKC,UAAUe,KAEpBC,OAAM,SAAAC,GACL3C,OAAOC,MAAM0C,MAdnB,OAkBE9B,EAAQ,CACNlC,KAAM,GACNE,QAAS,GACTuD,aAAc,GACdxD,YAAa,GACbyD,SAAU,GACVC,YAAa,GACbC,UAAW,GACXC,2BAA2B,IAE7BxB,EAAS,KA5BX,4CArB+B,sBAqD/B,OACE,gCACE,kDACA,uBAAMc,SAxDqB,4CAwD3B,UACE,sBAAK/D,UAAU,aAAf,UACE,uBAAOgE,QAAQ,OAAf,kBACA,uBACE9D,KAAK,OACLF,UAAU,eACVQ,GAAG,OACH4C,MAAOP,EAAKjC,KACZqD,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEvC,KAAM0C,EAAEY,OAAOd,cAGjD,sBAAKpD,UAAU,aAAf,UACE,uBAAOgE,QAAQ,UAAf,qBACA,uBACE9D,KAAK,OACLF,UAAU,eACVQ,GAAG,UACH4C,MAAOP,EAAK/B,QACZmD,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAErC,QAASwC,EAAEY,OAAOd,cAGpD,sBAAKpD,UAAU,aAAf,UACE,uBAAOgE,QAAQ,eAAf,0BACA,uBACE9D,KAAK,OACLF,UAAU,eACVQ,GAAG,eACH4C,MAAOP,EAAKwB,aACZJ,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEkB,aAAcf,EAAEY,OAAOd,cAGzD,sBAAKpD,UAAU,aAAf,UACE,uBAAOgE,QAAQ,cAAf,yBACA,uBACE9D,KAAK,OACLF,UAAU,eACVQ,GAAG,cACH4C,MAAOP,EAAKhC,YACZoD,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEtC,YAAayC,EAAEY,OAAOd,cAGxD,sBAAKpD,UAAU,aAAf,UACE,uBAAOgE,QAAQ,WAAf,sBACA,uBACE9D,KAAK,OACLF,UAAU,eACVQ,GAAG,WACH4C,MAAOP,EAAKyB,SACZL,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEmB,SAAUhB,EAAEY,OAAOd,cAGrD,sBAAKpD,UAAU,aAAf,UACE,uBAAOgE,QAAQ,cAAf,yBACA,uBACE9D,KAAK,OACLF,UAAU,eACVQ,GAAG,cACH4C,MAAOP,EAAK0B,YACZN,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEoB,YAAajB,EAAEY,OAAOd,cAGxD,sBAAKpD,UAAU,aAAf,UACE,uBAAOgE,QAAQ,YAAf,yBACA,uBACE9D,KAAK,OACLF,UAAU,eACVQ,GAAG,YACH4C,MAAOP,EAAK2B,UACZP,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEqB,UAAWlB,EAAEY,OAAOd,cAGtD,sBAAKpD,UAAU,aAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACVE,KAAK,QACLU,KAAK,4BACLJ,GAAG,eACH4C,MAAM,KACNe,QAA4C,OAAnCtB,EAAK4B,0BACdR,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEsB,0BAA2BnB,EAAEY,OAAOd,WAEpE,uBAAOY,QAAQ,iBAAiBhE,UAAU,mBAA1C,mBAEF,sBAAKA,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACVE,KAAK,QACLU,KAAK,4BACLJ,GAAG,YACH4C,MAAM,MACNe,QAA4C,QAAnCtB,EAAK4B,0BACdR,SAAU,SAACX,GAAD,OAAOH,EAAW,CAAEsB,0BAA2BnB,EAAEY,OAAOd,WAEpE,uBAAOY,QAAQ,iBAAiBhE,UAAU,mBAA1C,uBAGJ,qBAAKA,UAAU,aAAf,SACE,uBACEE,KAAK,SACLkD,MAAM,gBACNpD,UAAU,4BFxItB,SAAS6E,EAAiBC,EAAaC,IACrCtC,EAAe,IAAIR,OAAO+C,OAAOC,KAAKC,OAAOC,aAC3CJ,EAAgBK,QAChB,CAAEC,MAAO,CAAC,YAAaC,sBAAuB,CAAEC,QAAS,SAE9CC,UAAU,CAAC,qBAAsB,sBAC9C/C,EAAagD,YAAY,iBAAiB,kB,2CACxCC,CAAkBZ,M,4CAItB,WAAiCA,GAAjC,iBAAAxD,EAAA,sDACQqE,EAAgBlD,EAAamD,WAC7BC,EAAQF,EAAcG,kBAC5BhB,EAAYe,GACZE,QAAQC,IAAIL,GAJd,4C,sBA8BeM,MAvBf,WACE,MAA0B9E,mBAAS,IAAnC,mBAAO0E,EAAP,KAAcK,EAAd,KACMnB,EAAkBoB,iBAAO,MAS/B,OAPAvE,qBAAU,YA1CO,SAACwE,EAAKC,GACvBN,QAAQC,IAAIM,2CACZ,IAAIC,EAASC,SAASC,cAAc,UACpCF,EAAOrG,KAAO,kBAEVqG,EAAOG,WACTH,EAAOI,mBAAqB,WACA,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC3CH,EAAOI,mBAAqB,KAC5BN,MAIJE,EAAOK,OAAS,kBAAMP,KAGxBE,EAAOM,IAAMT,EACbI,SAASM,qBAAqB,QAAQ,GAAGC,YAAYR,GA0BnDS,CAAW,+CAAD,OACuCV,0CADvC,sBAER,kBAAMzB,EAAiBqB,EAAUnB,QAElC,IAGD,qBAAK/E,UAAU,wBAAf,SACE,uBACEiH,IAAKlC,EACLd,SAAU,SAAAiD,GAAK,OAAIhB,EAASgB,EAAMhD,OAAOd,QACzC+D,YAAY,eACZ/D,MAAOyC,OG7BAuB,EAhBH,WACV,OACE,gCACE,cAACrH,EAAD,IACA,qBAAKuC,MAAO,CAAE+E,OAAQ,IAAtB,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAACtG,EAAD,MAC/B,cAAC,IAAD,CAAOqG,KAAK,YAAYC,QAAS,cAAC9E,EAAD,MACjC,cAAC,IAAD,CAAO6E,KAAK,UAAUC,QAAS,cAACpD,EAAD,WAGjC,cAAC,EAAD,CAAaH,SAAU,kBAAM,YCnBnCwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJnB,SAASoB,eAAe,W","file":"static/js/main.641d64a2.chunk.js","sourcesContent":["import React from \"react\";\n\n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n\n// Here, we display our Navbar\nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n          <h1>community resources near you.</h1>\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/create\">\n                Create Record\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.name}</td>\n    <td>{props.record.description}</td>\n    <td>{props.record.address}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n      <button className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default function RecordList() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n\n    return; \n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n\n    const newRecords = records.filter((el) => el._id !== id);\n    setRecords(newRecords);\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          deleteRecord={() => deleteRecord(record._id)}\n          key={record._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div>\n      <h3>Record List</h3>\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Level</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  console.log(process.env.REACT_APP_GOOGLE_API_KEY)\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function() {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current,\n    { types: [\"(cities)\"], componentRestrictions: { country: \"us\" } }\n  );\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n  autoComplete.addListener(\"place_changed\", () =>\n    handlePlaceSelect(updateQuery)\n  );\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  console.log(addressObject);\n}\n\nfunction SearchInput() {\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`,\n      () => handleScriptLoad(setQuery, autoCompleteRef)\n    );\n  }, []);\n\n  return (\n    <div className=\"search-location-input\">\n      <input\n        ref={autoCompleteRef}\n        onChange={event => setQuery(event.target.value)}\n        placeholder=\"Enter a City\"\n        value={query}\n      />\n    </div>\n  );\n}\n\nexport default SearchInput;","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n        </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    address: \"\",\n    phone_number: \"\",\n    description: \"\",\n    category: \"\",\n    website_url: \"\",\n    image_url: \"\",\n    law_enforcement_compliant: null\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n      .catch(error => {\n        window.alert(error);\n        return;\n      });\n\n    setForm({\n      name: \"\",\n      address: \"\",\n      phone_number: \"\",\n      description: \"\",\n      category: \"\",\n      website_url: \"\",\n      image_url: \"\",\n      law_enforcement_compliant: false\n    });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Add New Resource</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"address\">Address</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"address\"\n            value={form.address}\n            onChange={(e) => updateForm({ address: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"phone_number\">Phone Number</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"phone_number\"\n            value={form.phone_number}\n            onChange={(e) => updateForm({ phone_number: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"description\"\n            value={form.description}\n            onChange={(e) => updateForm({ description: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"category\"\n            value={form.category}\n            onChange={(e) => updateForm({ category: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"website_url\">Website Url</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"website_url\"\n            value={form.website_url}\n            onChange={(e) => updateForm({ website_url: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"image_url\">Cover Image</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"image_url\"\n            value={form.image_url}\n            onChange={(e) => updateForm({ image_url: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"law_enforcement_compliant\"\n              id=\"notCompliant\"\n              value=\"No\"\n              checked={form.law_enforcement_compliant === \"No\"}\n              onChange={(e) => updateForm({ law_enforcement_compliant: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">No</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"law_enforcement_compliant\"\n              id=\"compliant\"\n              value=\"Yes\"\n              checked={form.law_enforcement_compliant === \"Yes\"}\n              onChange={(e) => updateForm({ law_enforcement_compliant: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Yes</label>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport SearchInput from './components/SearchInput';\n\n\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div style={{ margin: 20 }}>\n      <Routes>\n        <Route exact path=\"/\" element={<RecordList />} />\n        <Route path=\"/edit/:id\" element={<Edit />} />\n        <Route path=\"/create\" element={<Create />} />\n      </Routes>\n      </div>\n      <SearchInput onChange={() => null} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}